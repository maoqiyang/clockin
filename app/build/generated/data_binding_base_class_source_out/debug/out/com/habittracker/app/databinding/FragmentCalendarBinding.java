// Generated by view binder compiler. Do not edit!
package com.habittracker.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.habittracker.app.R;
import com.habittracker.app.ui.calendar.SimpleCalendarView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCalendarBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout bottomSheet;

  @NonNull
  public final SimpleCalendarView calendarView;

  @NonNull
  public final LinearLayout emptyState;

  @NonNull
  public final LinearLayout expandedContent;

  @NonNull
  public final ImageView iconExpand;

  @NonNull
  public final LinearLayout peekContent;

  @NonNull
  public final RecyclerView recyclerViewDayDetail;

  @NonNull
  public final TextView textCompletedDays;

  @NonNull
  public final TextView textCompletionRate;

  @NonNull
  public final TextView textSelectedDate;

  @NonNull
  public final TextView textTotalDays;

  private FragmentCalendarBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout bottomSheet, @NonNull SimpleCalendarView calendarView,
      @NonNull LinearLayout emptyState, @NonNull LinearLayout expandedContent,
      @NonNull ImageView iconExpand, @NonNull LinearLayout peekContent,
      @NonNull RecyclerView recyclerViewDayDetail, @NonNull TextView textCompletedDays,
      @NonNull TextView textCompletionRate, @NonNull TextView textSelectedDate,
      @NonNull TextView textTotalDays) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.calendarView = calendarView;
    this.emptyState = emptyState;
    this.expandedContent = expandedContent;
    this.iconExpand = iconExpand;
    this.peekContent = peekContent;
    this.recyclerViewDayDetail = recyclerViewDayDetail;
    this.textCompletedDays = textCompletedDays;
    this.textCompletionRate = textCompletionRate;
    this.textSelectedDate = textSelectedDate;
    this.textTotalDays = textTotalDays;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_sheet;
      LinearLayout bottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.calendar_view;
      SimpleCalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.empty_state;
      LinearLayout emptyState = ViewBindings.findChildViewById(rootView, id);
      if (emptyState == null) {
        break missingId;
      }

      id = R.id.expanded_content;
      LinearLayout expandedContent = ViewBindings.findChildViewById(rootView, id);
      if (expandedContent == null) {
        break missingId;
      }

      id = R.id.icon_expand;
      ImageView iconExpand = ViewBindings.findChildViewById(rootView, id);
      if (iconExpand == null) {
        break missingId;
      }

      id = R.id.peek_content;
      LinearLayout peekContent = ViewBindings.findChildViewById(rootView, id);
      if (peekContent == null) {
        break missingId;
      }

      id = R.id.recycler_view_day_detail;
      RecyclerView recyclerViewDayDetail = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewDayDetail == null) {
        break missingId;
      }

      id = R.id.text_completed_days;
      TextView textCompletedDays = ViewBindings.findChildViewById(rootView, id);
      if (textCompletedDays == null) {
        break missingId;
      }

      id = R.id.text_completion_rate;
      TextView textCompletionRate = ViewBindings.findChildViewById(rootView, id);
      if (textCompletionRate == null) {
        break missingId;
      }

      id = R.id.text_selected_date;
      TextView textSelectedDate = ViewBindings.findChildViewById(rootView, id);
      if (textSelectedDate == null) {
        break missingId;
      }

      id = R.id.text_total_days;
      TextView textTotalDays = ViewBindings.findChildViewById(rootView, id);
      if (textTotalDays == null) {
        break missingId;
      }

      return new FragmentCalendarBinding((CoordinatorLayout) rootView, bottomSheet, calendarView,
          emptyState, expandedContent, iconExpand, peekContent, recyclerViewDayDetail,
          textCompletedDays, textCompletionRate, textSelectedDate, textTotalDays);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
