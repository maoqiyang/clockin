// Generated by view binder compiler. Do not edit!
package com.habittracker.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.habittracker.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDayDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView iconStatus;

  @NonNull
  public final TextView textHabitDescription;

  @NonNull
  public final TextView textHabitName;

  @NonNull
  public final TextView textStatus;

  private ItemDayDetailBinding(@NonNull LinearLayout rootView, @NonNull ImageView iconStatus,
      @NonNull TextView textHabitDescription, @NonNull TextView textHabitName,
      @NonNull TextView textStatus) {
    this.rootView = rootView;
    this.iconStatus = iconStatus;
    this.textHabitDescription = textHabitDescription;
    this.textHabitName = textHabitName;
    this.textStatus = textStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDayDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDayDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_day_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDayDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.icon_status;
      ImageView iconStatus = ViewBindings.findChildViewById(rootView, id);
      if (iconStatus == null) {
        break missingId;
      }

      id = R.id.text_habit_description;
      TextView textHabitDescription = ViewBindings.findChildViewById(rootView, id);
      if (textHabitDescription == null) {
        break missingId;
      }

      id = R.id.text_habit_name;
      TextView textHabitName = ViewBindings.findChildViewById(rootView, id);
      if (textHabitName == null) {
        break missingId;
      }

      id = R.id.text_status;
      TextView textStatus = ViewBindings.findChildViewById(rootView, id);
      if (textStatus == null) {
        break missingId;
      }

      return new ItemDayDetailBinding((LinearLayout) rootView, iconStatus, textHabitDescription,
          textHabitName, textStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
